# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: First Github Action
on:
  push:
    branches: [ "master" ]


jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Set up  Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    
    - name: Generate app version
      id: app-version
      run: echo "::set-output name=appVersion::$(perl -ne 'print "$1\n" if /"version":\s*"(.*?)"/' package.json)"

    
    - name: download artifacts 
      uses: actions/upload-artifact@v3
      with:
        name: dist-without-markdown
        path: |
          artifact
          !artifact/**/*.md
    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: output/test/code-coverage.html
        
#     - name: Create tag
#       uses: actions/github-script@v5
#       with:
#         script: |
#           github.rest.git.createRef({
#           owner: context.repo.owner,
#           repo: context.repo.repo,
#           ref: 'refs/tags/<tagname>',
#           sha: context.sha
#             })
            
    - name: Extract tag name
      id: tag
      uses: actions/github-script@0.2.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
            return context.payload.ref.replace(/\/refs\/tags\//, '');
            
    - name: Echo
      run: echo ${{ steps.tag.outputs.result }}
        
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      
